apiVersion: v1
kind: Namespace
metadata:
  name: kafka
  labels:
    name: kafka

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
  labels:
    app: zookeeper
  namespace: kafka  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      volumes:
      - name: data
        emptyDir: {}
      containers:
      - name: zookeeper
        image: docker.io/bitnami/zookeeper:3.8
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: data
          mountPath: /bitnami/zookeeper/data
        ports:
        - containerPort: 2181
        env:
        - name: ALLOW_ANONYMOUS_LOGIN
          value: "yes"
      - name: broker
        image: docker.io/bitnami/kafka:3.3
        volumeMounts:
        - name: data
          mountPath: /bitnami/kafka/data
        ports:
        - containerPort: 9093
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_CFG_ZOOKEEPER_CONNECT
          value: localhost:2181
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes" 
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: KAFKA_CFG_LISTENERS
          value: CLIENT://:9092,EXTERNAL://:9093
        - name: KAFKA_CFG_ADVERTISED_LISTENERS
          value: CLIENT://localhost:9092,EXTERNAL://localhost:9093
        - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
          value: CLIENT



---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  namespace: kafka
spec:
  selector:
    app: zookeeper
  ports:
    - protocol: TCP
      port: 9093
      targetPort: 9093

